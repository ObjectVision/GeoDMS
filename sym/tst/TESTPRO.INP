(
/*
( (card ace   spades) )
( (card queen spades) )
( (card jack  spades) )
( (card 3     spades) )
( (card king  hearts) )
( (nrcard spades 4) )
( (nrcard hearts 1) )
( (honour ace) )
( (honour king) )
( (honour queen) )
( (honour jack) )
( (honour 10) )
( (singleton _C) 			(nrcard _C 1))
( (honour_sing _H _C) 	(card _H _C)
								(honour _H)
								(singleton _C))
*/
// ( (impl (and (impl _P _Q) _P) _Q) PROP_LOGIC )
// ( (and _P _Q)                     PROP_LOGIC _P _Q) 

//( _Q                              PROP_LOGIC (impl _P _Q) _P)
//( (eq (div _X 1) _X) )

// PROP_LOGIC
((impl _P _Q)           PROP_LOGIC _Q)
((impl _P _Q)           PROP_LOGIC (not _P))
((eqv  _p _Q)           PROP_LOGIC (impl _P _Q) (impl _Q _P))
((and  _P _Q)           PROP_LOGIC _P _Q)
((or   _P _Q)           PROP_LOGIC _P)
((or   _P _Q)           PROP_LOGIC _Q)

// SET-THEORY
( (is_set (set ))        SETS)
( (is_set [set [_H _T]]) SETS (is_set [set _T]))
( (is_set (union _A _B)) SETS (is_set _A) (is_set _B))
( (is_set (intersect _A _B)) SETS (is_set _A) (is_set _B))
( (is_set (cartesian _A _B)) SETS (is_set _A) (is_set _B))
( (is_set (powerset _A ))    SETS (is_set _A))

( (is_member _e [set [_e _T]]) SETS )
( (is_member _e [set [_H _T]]) SETS (is_member _e [set _T]))
( (is_member _e (union _A _B)) SETS (is_member _e _A))
( (is_member _e (union _A _B)) SETS (is_member _e _B))
( (is_member _e (intersect _A _B)) SETS (is_member _e _A) (is_member _e _B))
( (is_member (_a _b) (cartesian _A _B)) SETS (is_member _a _A) (is_member _b _B))
( (is_member _p (pwerset _A)) SETS (is_subset _p _A))

// GENERIC ALGEBRAIC PROPERTIES ON BINARY OPERATORS

( ( _BinOp is commutatief on _G) (for each (_a _b) in (_G _G) ((_BinOp _a _b) equals (_BinOp _b _a))))

// GROUP-THEORY
( (_BinOp is a group on _G)      (for each (_a _b) in (_G _G) (is_member (_P _a _b) _G))
                                 (_BinOp on _G has identity _E)
											(for each _a in _G (there is a _b in _G (_BinOp _a _b equalss _E)))
                                 (_BinOp is associatief on _G))

// Frame Inclusion Relations
( PROP_LOGIC	PRED_LOGIC )
( PRED_LOGIC       MODAL_LOGIC)

// CURRENT ASSUMPTIONS
( PRED_LOGIC )
( SETS       )
( (IsMortal _X) (IsHuman _X) )
( (IsHuman Socrates) )

)

// GOAL-LIST
//((IsMortal _Who))
// ((is_set (set 3)))
 ((is_member _X (cartesian (set 1 2 ) (set 3 4 5 ))))
//( PROP_LOGIC )

((eq (div 3 1) _R) )

//((honour_sing _H _C))


)))
Can't touch this.


